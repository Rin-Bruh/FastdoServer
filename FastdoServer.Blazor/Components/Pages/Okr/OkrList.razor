@page "/okrs"
@using FastdoServer.Core.Entities
@using FastdoServer.Infrastructure.Data.Okr
@inject OkrRepo OkrRepo
@inject OkrConfigRepo OkrConfigRepo
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager Nav
@rendermode InteractiveServer
@attribute [StreamRendering]

<div class="okr-list-container" style="padding:24px;">
  <div style="display:flex;justify-content:space-between;align-items:center; flex-wrap: wrap; gap: 16px;">
    <h2 style="font-weight:600;color:#6c757d; margin-bottom: 0;">OKRS - CÁ NHÂN</h2>
    <div style="display:flex; align-items:center; gap: 16px; flex-wrap: wrap;">
      @if (currentUser?.companys is not null && currentUser.companys.Any())
      {
        <select class="form-select" style="width: 200px;" @onchange="OnCompanyChanged">
          @foreach (var company in currentUser.companys)
          {
            <option value="@company.id" selected="@(company.id == selectedCompanyId)">@company.name</option>
          }
        </select>
      }
      <select class="form-select" style="width: 150px;" @onchange="OnCycleChanged">
        @if (availableCycles.Any())
        {
          @foreach (var cycle in availableCycles)
          {
            <option value="@cycle.id" selected="@(cycle.id == selectedCycleId)">@cycle.name</option>
          }
        }
      </select>
      <button class="btn btn-outline-primary" style="padding:8px 20px;border-radius:8px;">
          + Thêm OKRs
      </button>
    </div>
  </div>

  <div style="background:#fff;border-radius:12px;padding:0;margin-top:20px;box-shadow:0 1px 4px #0001;">
    <table class="table" style="margin-bottom:0;">
      <thead>
        <tr style="background:#fafafa;">
          <th style="min-width:180px;">Mục tiêu</th>
          <th style="min-width:160px;">Kết Quả Then Chốt</th>
          <th style="min-width:120px;">Thực đạt</th>
          <th style="min-width:100px;">Tiến độ</th>
          <th style="min-width:100px;">Thay đổi</th>
          <th style="min-width:120px;">Ngày tạo</th>
        </tr>
      </thead>
      <tbody>
        @if (okrs != null && okrs.Count > 0)
        {
          @foreach (var okr in okrs)
          {
            <tr style="font-weight:600;">
              <td>
                <span style="color:#2d3a4a;">@okr.name</span>
              </td>
              <td>
                @if (okr.key_results != null)
                {
                  <span style="color:#1d39c4;">@okr.key_results.Count kết quả</span>
                  <span style="margin-left:4px;">&#9654;</span>
                }
                else
                {
                  <span>0 kết quả</span>
                }
                </td>
              <td></td>
              <td></td>
              <td></td>
              <td>@FormatDate(okr.date_create)</td>
            </tr>
            @if (okr.key_results != null)
            {
              @foreach (var kr in okr.key_results)
              {
                <tr style="background:#fcfcfc;">
                <td style="padding-left:32px;font-weight:400;">
                  @kr.name
                </td>
                <td></td>
                <td>
                  <span style="color:#52c41a;">
                    @kr.result / @kr.target @kr.unit
                  </span>
                </td>
                <td>
                  <span>0%</span>
                </td>
                <td>
                  <span>0%</span>
                </td>
                <td></td>
                </tr>
              }
            }
          }
        }
        else
        {
          <tr>
            <td colspan="6" class="text-center p-4">
              @if(currentUser is null) {
                <span>Đang tải dữ liệu...</span>
              } else {
                <span>Không có OKRs nào.</span>
              }
            </td>
          </tr>
        }
      </tbody>
    </table>
  </div>
</div>

@code {
  private List<OkrModel> okrs = new();
  private UserModel? currentUser;
  private string? selectedCompanyId;
  private string? selectedCycleId;

  private List<OkrConfigModel.Cycle> availableCycles = new();

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
      var userResult = await SessionStorage.GetAsync<UserModel>("user");
      if (userResult.Success && userResult.Value != null)
      {
        currentUser = userResult.Value;

        selectedCompanyId = currentUser.companys?.FirstOrDefault()?.id;        
        if (!string.IsNullOrEmpty(selectedCompanyId))
        {
          await LoadCyclesAsync(selectedCompanyId);
          await LoadOkrsAsync();
        }
        StateHasChanged();
      }
      else
      {
        Nav.NavigateTo("/login");
      }
    }
  }

  private async Task OnCompanyChanged(ChangeEventArgs e)
  {
    selectedCompanyId = e.Value?.ToString();
    await LoadCyclesAsync(selectedCompanyId);
    await LoadOkrsAsync();
  }

  private async Task OnCycleChanged(ChangeEventArgs e)
  {
    selectedCycleId = e.Value?.ToString();
    await LoadOkrsAsync();
  }

  private async Task LoadCyclesAsync(string? companyId)
  {
    if (string.IsNullOrEmpty(companyId))
    {
      return;
    }

    availableCycles.Clear();
    var config = await OkrConfigRepo.Get(companyId);
    if (config?.cycles is not null)
    {      
      availableCycles = config.cycles;
      selectedCycleId = availableCycles.FirstOrDefault()?.id;
    }
  }

  private async Task LoadOkrsAsync()
  {
    if (currentUser is not null && !string.IsNullOrEmpty(selectedCompanyId) && !string.IsNullOrEmpty(selectedCycleId))
    {
      okrs.Clear();
      StateHasChanged();

      okrs = await OkrRepo.GetList(selectedCompanyId, selectedCycleId, currentUser.id);
      StateHasChanged();
    }
  }

  private string FormatDate(long ticks)
  {
    try
    {
      var date = new DateTime(ticks);
      return date.ToString("dd/MM/yyyy");
    }
    catch
    {
      return "";
    }
  }
}
